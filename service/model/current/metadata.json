{
    "pipeline": [
        {
            "fixed": {
                "whitespace": false,
                "regex": null,
                "split": " ",
                "do-lower-case": true,
                "remove-stopwords": true,
                "remove-punctuation": false,
                "custom-stopwords": null,
                "add-to-stopwords": null,
                "remove-from-stopwords": null,
                "normalize": true,
                "remove-numbers": false,
                "filters": "!\"’«#$%&()*+,-./:;<=>?@[\\]^_`'{|}~\t\n",
                "language": "en",
                "opt-metric-name": "f1-score",
                "optimize-estimator": false,
                "max-time-for-optimization": 3600,
                "random-state": 41,
                "output-folder": "./model",
                "n_jobs": 1,
                "save-base-model": false,
                "target": null,
                "load-path": null,
                "save-patg": null,
                "verbose": false,
                "name": "WordTokenizer"
            },
            "tunable": {},
            "model_file": "WordTokenizer.pkl",
            "folder": "/app/model/current",
            "label": "kolibri.tokenizers.word_tokenizer.WordTokenizer",
            "name": "WordTokenizer"
        },
        {
            "fixed": {
                "token-pattern": "(?u)\\b\\w\\w+\\b",
                "strip-accents": null,
                "min-ngram": 1,
                "stop-words": null,
                "case-sensitive": true,
                "use-bigram-model": false,
                "remove-stopwords": true,
                "language": "en",
                "opt-metric-name": "f1-score",
                "optimize-estimator": false,
                "max-time-for-optimization": 3600,
                "random-state": 41,
                "output-folder": "./model",
                "n_jobs": 1,
                "save-base-model": false,
                "target": null,
                "load-path": null,
                "save-patg": null,
                "verbose": false,
                "name": "TFIDFFeaturizer"
            },
            "tunable": {
                "min-df": {
                    "description": "min document frequency of a word to add to vocabulary. If float - the parameter represents a proportion of documents. If integer - absolute counts",
                    "value": 0.01,
                    "type": "float",
                    "range": [
                        0,
                        0.3
                    ]
                },
                "max-df": {
                    "description": "max document frequency of a word to add to vocabulary. If float - the parameter represents a proportion of documents. If integer - absolute counts",
                    "value": 1.0,
                    "type": "float",
                    "range": [
                        0.6,
                        1
                    ]
                },
                "max-ngram": {
                    "description": "set min)range of ngrams to be extracted",
                    "value": 1,
                    "type": "integer",
                    "range": [
                        1,
                        3
                    ]
                },
                "do-lower-case": {
                    "description": "If True all text will be converted to lower case",
                    "value": true,
                    "type": "boolean",
                    "values": [
                        true,
                        false
                    ]
                },
                "max-features": {
                    "description": "keeps only to 'max-features'",
                    "value": 20000,
                    "type": "integer",
                    "values": [
                        10000,
                        60000
                    ]
                }
            },
            "featurizer_file": "TFIDFFeaturizer.pkl",
            "folder": "/app/model/current",
            "label": "kolibri.features.text.tf_idf_featurizer.TFIDFFeaturizer",
            "name": "TFIDFFeaturizer"
        },
        {
            "fixed": {
                "auto-ml": false,
                "base-estimator": null,
                "explain": false,
                "evaluate-performance": true,
                "task-type": "classification",
                "optimize-estimator": false,
                "features-names": null,
                "max-nb-models": 5,
                "fold_strategy": "stratifiedkfold",
                "resampling-strategy": "holdout",
                "imputer": "none",
                "fold-shuffle": true,
                "cross-validate": true,
                "groups": null,
                "n-folds": 5,
                "round": 4,
                "display": "default",
                "default-params": null,
                "language": "en",
                "opt-metric-name": "f1-score",
                "max-time-for-optimization": 3600,
                "random-state": 41,
                "output-folder": "./model",
                "n_jobs": 1,
                "save-base-model": false,
                "target": null,
                "load-path": null,
                "save-patg": null,
                "verbose": false,
                "name": "SklearnEstimator"
            },
            "tunable": {
                "model": {
                    "value": {
                        "class": "sklearn.linear_model.LogisticRegression",
                        "description": "In statistics, the logistic model is used to model the probability of a certain class or event existing such as pass/fail, win/lose, alive/dead or healthy/sick. This can be extended to model several classes of events such as determining whether an image contains a cat, dog, lion, etc.",
                        "parameters": {
                            "penalty": {
                                "value": "l2",
                                "type": "categorical",
                                "values": [
                                    "l1",
                                    "l2",
                                    "None",
                                    "elasticnet"
                                ]
                            },
                            "class_weight": {
                                "value": null,
                                "type": "categorical",
                                "values": [
                                    "balanced",
                                    null
                                ]
                            },
                            "solver": {
                                "value": "lbfgs",
                                "type": "categorical",
                                "values": [
                                    "newton-cg",
                                    "lbfgs",
                                    "liblinear"
                                ]
                            },
                            "multi_class": {
                                "value": "auto",
                                "type": "categorical",
                                "values": [
                                    "auto",
                                    "ovr",
                                    "multinomial"
                                ]
                            },
                            "max_iter": {
                                "value": 100,
                                "type": "integer",
                                "values": [
                                    200,
                                    2000
                                ]
                            },
                            "C": {
                                "value": 1.0,
                                "type": "float",
                                "values": [
                                    0.1,
                                    10
                                ]
                            }
                        },
                        "name": "logistic_regression",
                        "family": "linear",
                        "matrix": "sparse",
                        "performance": "fast",
                        "library": "sklearn"
                    }
                }
            },
            "classifier_file": "classifier_kolibri.pkl",
            "performace_scores": {
                "Accuracy": {
                    "Mean": 0.5707,
                    "Std": 0.0033
                },
                "AUC": {
                    "Mean": 0.7653,
                    "Std": 0.0044
                },
                "Recall": {
                    "Mean": 0.5707,
                    "Std": 0.0033
                },
                "Prec.": {
                    "Mean": 0.6573,
                    "Std": 0.009
                },
                "F1": {
                    "Mean": 0.5143,
                    "Std": 0.0043
                },
                "Kappa": {
                    "Mean": 0.3568,
                    "Std": 0.0051
                },
                "MCC": {
                    "Mean": 0.435,
                    "Std": 0.0067
                },
                "Confusion_matrix": {
                    "body": {
                        "body": 10716,
                        "signature": 7807,
                        "header": 1206,
                        "salutation": 1555,
                        "disclaimer": 798,
                        "caution": 384
                    },
                    "signature": {
                        "body": 543,
                        "signature": 1382,
                        "header": 55,
                        "salutation": 9,
                        "disclaimer": 150,
                        "caution": 21
                    },
                    "header": {
                        "body": 83,
                        "signature": 38,
                        "header": 3802,
                        "salutation": 0,
                        "disclaimer": 33,
                        "caution": 9
                    },
                    "salutation": {
                        "body": 0,
                        "signature": 0,
                        "header": 0,
                        "salutation": 352,
                        "disclaimer": 0,
                        "caution": 0
                    },
                    "disclaimer": {
                        "body": 71,
                        "signature": 102,
                        "header": 3,
                        "salutation": 1,
                        "disclaimer": 869,
                        "caution": 9
                    },
                    "caution": {
                        "body": 1,
                        "signature": 0,
                        "header": 0,
                        "salutation": 0,
                        "disclaimer": 1,
                        "caution": 0
                    }
                },
                "Class_report": "              precision    recall  f1-score   support\n\n        body       0.48      0.94      0.63     11414\n   signature       0.64      0.15      0.24      9329\n      header       0.96      0.75      0.84      5066\n  salutation       1.00      0.18      0.31      1917\n  disclaimer       0.82      0.47      0.60      1851\n     caution       0.00      0.00      0.00       423\n\n    accuracy                           0.57     30000\n   macro avg       0.65      0.42      0.44     30000\nweighted avg       0.66      0.57      0.51     30000\n"
            },
            "label": "kolibri.task.text.classification.sklearn_classification_estimator.SklearnEstimator",
            "name": "SklearnEstimator"
        }
    ],
    "X_schema": {
        "Text": "A partir da data: 27/02/2020"
    },
    "trained_at": "20221218-191647",
    "kolibri_version": "1.1.6"
}